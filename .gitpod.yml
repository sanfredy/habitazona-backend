# .gitpod.yml

# La imagen base que se usará para el espacio de trabajo.
# Gitpod tiene imágenes predefinidas para muchos lenguajes (ej. gitpod/workspace-node, gitpod/workspace-python, etc.)
# Puedes usar una imagen más específica o tu propia imagen Docker si la tienes.
image: gitpod/workspace:latest # O una más específica como gitpod/workspace-node

# Define las tareas que se ejecutarán en el espacio de trabajo.
# Una tarea representa un terminal. Puedes tener múltiples tareas.
tasks:
  - name: Setup Backend
    # 'init' se ejecuta una sola vez cuando el espacio de trabajo se inicia por primera vez (o después de un reinicio completo).
    # Aquí es donde instalas las dependencias de tu proyecto.
    init: |
      echo "Instalando dependencias..."
      # --- Reemplaza la siguiente línea según tu lenguaje ---
      # Si es Node.js: npm install
      # Si es Python: pip install -r requirements.txt
      # Si es PHP: composer install
      # Si es Ruby: bundle install
      npm install # EJEMPLO: Asumiendo Node.js para este ejemplo
      echo "Dependencias instaladas."

    # 'command' se ejecuta cada vez que el terminal de la tarea se abre o se reinicia.
    # Aquí es donde inicias tu aplicación o servidor de desarrollo.
    command: |
      echo "Iniciando servidor backend..."
      # --- Reemplaza la siguiente línea según tu lenguaje ---
      # Si es Node.js: npm start o node server.js
      # Si es Python: python app.py o flask run
      # Si es PHP (Laravel): php artisan serve --host 0.0.0.0 --port 8000
      npm start # EJEMPLO: Asumiendo Node.js
      echo "Servidor backend iniciado."

# Define los puertos que tu aplicación expone y cómo Gitpod debe manejarlos.
ports:
  - port: 3000 # Reemplaza con el puerto real de tu backend (ej. 8000 para Laravel/Django, 3000 para Node.js, etc.)
    onOpen: open-browser # o 'open-preview' si quieres que se abra en un panel al lado, 'ignore' si no quieres que se abra automáticamente
    visibility: public # Hace que el puerto sea accesible desde fuera del espacio de trabajo (necesario para ver tu app)

# Configuraciones opcionales para la preconstrucción de los espacios de trabajo
# Pre-builds aceleran el tiempo de inicio de los espacios de trabajo
# Puedes habilitarlo para la rama principal o para los pull requests.
# Para un proyecto pequeño, quizás no sea estrictamente necesario al inicio.
# https://www.gitpod.io/docs/configure/workspaces/prebuilds
#github:
#  prebuilds:
#    # Master/main branch
#    main: true
#    # All branches (defaults to false)
#    branches: true
#    # All pull requests (defaults to true)
#    pullRequests: true
#    # All pull requests from forks (defaults to false)
#    pullRequestsFromForks: true
#    # Caching for prebuilds (defaults to true)
#    addCheck: true
